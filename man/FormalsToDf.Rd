% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{FormalsToDf}
\alias{FormalsToDf}
\title{Handle vector arguments to functions in a collated fashion.}
\usage{
FormalsToDf(theFunc, envir = parent.frame())
}
\arguments{
\item{meta}{Character the metadata field.}

\item{package}{Character The package to query for metadata.}
}
\value{
Dataframe
}
\description{
\code{FormalsToDf} is called inside a function where some formal arguments may have
been supplied as vectors. \code{FormalsToDf} constructs a dataframe from the
arguments which can then be passed to plyr::mlply (or similar, e.g. mdply) to
return a list of results.  The assumption is that all vector arguments are
collated: 1) NULL arguments are dropped; 2) all arguments of length > 1 all have
the same length and are collated.
}
\examples{
## A stupid example where true vectorization is possible
myF.atomic <- function(x,y,z=NULL) if(is.null(z)) x+y else x+y+z  
myF <- function(x,y,z=NULL) { 
  col <- FormalsToDf(myF) 
  plyr::maply(col, myF.atomic, .expand=FALSE)
  }
myF.atomic(x=11:13,y=1:3)
myF(x=11:13,y=1:3)
}
\keyword{internal}
\keyword{utilities}

