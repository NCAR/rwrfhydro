% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/usgs_time_slice.R
\name{MkUsgsTimeSlice}
\alias{MkUsgsTimeSlice}
\title{Make timeslices from active USGS discharge data files.}
\usage{
MkUsgsTimeSlice(realTimeFiles, outPath, nearestMin = 5, oldestTime = NULL,
  qcFunction, varianceFunction)
}
\arguments{
\item{realTimeFiles}{Character vector of active RData format files to be
processed.}

\item{outPath}{Character, the directory path where ncdf files are to be
written.}

\item{nearestMin}{Numeric, the time resolution to which the observation times
are rounded and the netcdf timeslice files are to be written. Must evenly
divide 60.}

\item{oldestTime}{POSIXct, the date BEFORE which data will be ignored.}

\item{qcFunction}{Function, used to apply quality control procedures to the
timeslice in metric units. Note that this QC can only use information from
the current time. QC procedures involving the temporal domain will be
applied elsewhere.}

\item{varianceFunction}{Function, used to derive the observation variance
from a dataframe with the following columns: \code{site_no}, \code{dateTime}, \code{code}, \code{queryTime}, and \code{discharge.cms}.
The function accepts the dataframe and returns the data frame with the new \code{variance} column.}
}
\value{
A dataframe with two columns: \code{POSIXct} and \code{filename}
  which given the time of the timeslice and the corresponding file name with
  full path.
}
\description{
Make timeslices from active USGS discharge data files.
}
\examples{
\dontrun{
realTimeFiles <- list.files(pattern='huc.*.RData', 
                            path='~/usgsStreamData/realTimeData', 
                            full.names=TRUE)
outPath = '~/usgsStreamData/timeSliceData/'
library(doMC)
registerDoMC(4)

## A first test
ret1 <- MkUsgsTimeSlice( realTimeFiles[1:21], outPath=outPath, 
                         oldest=as.POSIXct('2015-04-15 00:00:00', tz='UTC') )
nrow(ret1)

## delete the files and see how many more are created without the oldestTime set
unlink(ret1$file)
ret1 <- MkUsgsTimeSlice( realTimeFiles[1:21], outPath=outPath )
nrow(ret1)  ## quite a few more files. 
ncdump(ret1$file[230])  ## 27 stations
ret2 <- MkUsgsTimeSlice( realTimeFiles[22:42], outPath=outPath )
ncdump(ret1$file[230])  ## 58 stations

## new experiment
unlink(unique(c(ret1$file, ret2$file)))
ret1 <- MkUsgsTimeSlice( realTimeFiles, outPath=outPath, nearest=60,
                        oldest=as.POSIXct('2015-04-15 00:00:00', tz='UTC'))
nStn <- 
 plyr::ldply(NamedList(ret1$file), 
      function(ff) { nc <- ncdump(ff, quiet=TRUE)
                     data.frame(nStn=nc$dim$stationId$len,
                                time=as.POSIXct('1970-01-01 00:00:00',tz='UTC') + 
                                     nc$dim$time$vals,
                                nUniqueStn = length(unique(nc$dim$stationId$vals)) )},
             .parallel=TRUE)
library(ggplot2)
ggplot(nStn, aes(x=time,y=nStn)) + geom_point(color='red')


###############################
## process on hydro-c1
realTimeFiles <- list.files(pattern='huc.*.RData', 
                            path='~/usgsStreamData/realTimeData', 
                            full.names=TRUE)
outPath = '~/usgsStreamData/timeSliceData/'
library(doMC)
registerDoMC(12)

## I'm worried about using too much memory, when I run this on all 
## previously collected data, so break up the problem
chunkSize <- 1000
chunkDf <- data.frame( ind = 0:(length(realTimeFiles) \%/\% chunkSize) )
chunkDf <- within(chunkDf, { start = (ind)*chunkSize+1
                             end   = pmin( (ind+1)*chunkSize, length(realTimeFiles)) } )

for (ii in 1:nrow(chunkDf) ) {
ret1 <- MkUsgsTimeSlice( realTimeFiles[chunkDf$start[ii]:chunkDf$end[ii]], 
                         outPath=outPath, nearest=60,
                         oldest=as.POSIXct('2015-04-15 00:00:00', tz='UTC')
                       )
}

## end dontrun }  
}
\concept{
usgs
}

