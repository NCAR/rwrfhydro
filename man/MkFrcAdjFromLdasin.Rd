% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mkForcingSpatialAdjFiles.R
\name{MkFrcAdjFromLdasin}
\alias{MkFrcAdjFromLdasin}
\title{Create modle forcing adjustment files using LDASIN file.}
\usage{
MkFrcAdjFromLdasin(frcAdjL, file)
}
\arguments{
\item{frcAdjL}{List, the variable list. See structure in examples.}

\item{file}{character, the path/filename.nc of the netcdf file to be written.}
}
\value{
Returns the filename invisibly, if successful.
}
\description{
\code{MkFrcAdjFromLdasin} Takes an list (see examples) and creates at netcdf file
with a specified name which can be used to perturb WRF-Hydro forcing variables.
}
\examples{
\dontrun{
# Example 1 - 1 variable
theFile <- '/glade/p/work/jamesmcc/WRF_Hydro/domains/tuolumne/FORCING/2007100100.LDASIN_DOMAIN1'
## Note: I've Abandoned compression with scale factor and add offset for the time being.
frcAdjList <-
  list(LDASIN=theFile,
       RAINRATE=list(variable='RAINRATE',
                     operator=tolower('x'),
                     data=2,  ## could be an array
                     ##scale_factor=.001, ## discouraged due to model uncompression issues
                     ##add_offset=4.0,    ##  "  "
                     upperBound=0.014,    ## the limit imposed in the model = 500mm/hr = .1388889
                     lowerBound=0.0
                    )
      )
## Notes: high rain rates crash the model. 500mm/hr is the limit in the model
##        but uniform rain of lesser magnitudes can crash the model.
OpTransform <- c(`+`='.add', `x`='.mult')
outFile <- paste0('/glade/p/work/jamesmcc/forcing_spatial_adj/test.frcAdj/',
                  'frcAdj',
                  OpTransform[frcAdjList$RAINRATE$operator],
                  '.data.',  frcAdjList$RAINRATE$data,
                  '.scale.',frcAdjList$RAINRATE$scale_factor,
                  '.add.',  frcAdjList$RAINRATE$add_offset,
                  '.upBnd.', frcAdjList$RAINRATE$upperBound,
                  '.loBnd.', frcAdjList$RAINRATE$lowerBound,
                  '.nc')
unlink(outFile)
zz <- MkFrcAdjFromLdasin(frcAdjList, outFile)
theData <- GetNcdfFile(zz)
summary(as.vector(theData[[1]]))
}
}
\seealso{
Other ncdf: \code{\link{GetNcdfFile}},
  \code{\link{MkNcdf}}, \code{\link{ncdump}}
}
\concept{ncdf}
