% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcStatCategorical.R
\name{CalcStatCategorical}
\alias{CalcStatCategorical}
\title{Calculate some categorical verification measures for categorical/continuous variables.}
\usage{
CalcStatCategorical(DT, obsCol, modCol, obsMissing = NULL,
  modMissing = NULL, threshold = NULL, category = c("YES", "NO"),
  groupBy = NULL, obsCondRange = c(-Inf, Inf), modCondRange = c(-Inf,
  Inf), statList = c("H", "FAR", "CSI"))
}
\arguments{
\item{DT}{A data.table or dataframe: containing two columns of observation (truth) and the model/forecast}

\item{obsCol}{Character: name of the observation column.}

\item{modCol}{Character: name of the model/forecast column.}

\item{obsMissing}{Numeric/Character vector: defining all the missing values in the observation}

\item{modMissing}{Numeric/Character vector: defining all the missing values in the model/forecats}

\item{threshold}{Numeric vector: Define it if you have numeric variables and you want to calculate the
categorical statistics for different cutoff/threshod values}

\item{category}{Vector with two elements. At this time only a 2 by 2 contigenc y table is supported. 
should be defined if the variable is actually categorical and threshold is NULL}

\item{groupBy}{Character vector: Name of all the columns in \code{DT} which the statistics should be classified based on.}

\item{obsCondRange}{Numeric vector: containing two elements (DEFAULT = c(-Inf,Inf)).
Values are used as the lower and upper boundary for observation in calculating conditional statistics.
If conditioning only at one tail, leave the second value as -Inf or Inf. For eaxmple, if interested on 
only values greater than 2, then obsCondRange = c(2, Inf)}

\item{modCondRange}{Numeric vector: containing two elements (DEFAULT = c(-Inf,Inf)).
Values are used as the lower and upper boundary for model/forecast in calculating conditional statistics.
If conditioning only at one tail, leave the second value as -Inf or Inf. For eaxmple, if interested on 
only values greater than 2, then obsCondRange = c(2, Inf)}

\item{statList}{Character vector: list of all the statistics you are interested.}
}
\value{
data.frame containing all the requested statistics in \code{statList}
}
\description{
\code{CalcStatCategorical} inputs a data.table or data.frame having two columns of 
observation and model/forecast and computes some of the categorical verification measures 
for either categorical or continous variables.
}
\details{
The calculated statistics are the following: \itemize{
\item a : Hits in contingency table (both observation and forecast say YES)
\item b : False alarm in contingency table (observation says NO while forecast says YES)
\item c : Misses in contingency table (observation says YES while forecast says NO)
\item d : Correct rejection in contingency table (both observation and forecast say NO)
\item n : Total number of pairs = \eqn{a+b+c+d}
\item s : Base rate = \eqn{(a+c)/n}
\item r : Forecast rate = (a+b)/n,
\item B : Frequency bias  = (a+b)/(a+c)
\item H : Hit rate  = a/(a+c),
\item F : False alarm rate  = b/(b+d),
\item FAR : False alarm ratio = b/(a+b),
\item PC : Proportion Correct = (a+d)/n,
\item CSI : Critical Success Index = a/(a+b+c),
\item GSS : Gilbert Skill Score = (a-ar)/(a+b+c-ar), where ar = (a+b)(a+c) /n is the expected a for a random forecast with the same r and s
\item HSS : Heidke Skill Score = (a+d-ar-dr)/(n-ar-dr), where dr = (b+d)(c+d)/n
\item PSS : Pierce Skilll Score  = (a*d-b*c)/((b+d)*(a+c)),
\item CSS : Clayton Skill Scrore = a/(a+b)-c/(c+d),
\item DSS : Doolittle Skill Score = (a*d-b*c)/sqrt((a+b)*(c+d)*(a+c)*(b+d)),
\item LOR : Log of Odds Ratio = log(a*d/(b*c)),
\item ORSS : Odds Ratio Skill Score = (a*d-b*c)/(a*d+b*c),
\item EDS : Extreme Dependency Score = 2*log((a+c)/n)/log(a/n),
\item SEDS : Symmetric Extreme Dependency Score = log(ar/a)/log(a/n),
\item SEDI : Symmetric External Dependence Index= (log(b/(b+d))-log(a/(a+c))+log(1-a/(a+c))-log(1-b/(b+d)))/(log(b/(b+d))+log(a/(a+c))+log(1-a/(a+c)))+log(1-b/(b+d))
} For more information refer to Forecast Verification, A Practitioner Guide in Atmospheric Science. Jollife and Stephenson, 2012.
}
\examples{

# for categorical data
ExampleDF <- data.frame(obs=c(rep("YES",25), rep("NO", 25)), mod=rep(c("YES","NO"),25))
stat <- CalcStatCategorical(DT = ExampleDF, obsCol = "obs", modCol = "mod", category = c("YES","NO"))

# for categorical data with more than one experiment
ExampleDF <- data.frame(obs=c(rep("YES",25), rep("NO", 25)), mod=rep(c("YES","NO"),25), 
Experiment = c(rep(c("1","2","3"),16),"1","2"))
stat <- CalcStatCategorical(DT = ExampleDF, obsCol = "obs", modCol = "mod", 
category = c("YES","NO"), groupBy="Experiment")

# for continuous data with different threshold values
ExampleDF <- data.frame(obs=rnorm(10000000, 100, 10), mod=rnorm(10000000, 100, 10))
stat <- CalcStatCategorical(DT = ExampleDF, obsCol = "obs", modCol = "mod", 
threshold = c(60,70,80,90,100,110, 120, 130, 140))

ExampleDF <- data.frame(obs=rnorm(10000000, 100, 10), mod=rnorm(10000000, 100, 10), 
Experiment=rep(c("Model1","Model2"),5000000))
stat <- CalcStatCategorical(DT = ExampleDF, obsCol = "obs", modCol = "mod", 
threshold = c(60,70,80,90,100,110, 120, 130, 140), groupBy = "Experiment")

}
\seealso{
Other modelEvaluation: \code{\link{CalcMetContGrid}},
  \code{\link{CalcMetCont}},
  \code{\link{CalcModPerfMulti}},
  \code{\link{CalcModPerf}},
  \code{\link{CalcNoahmpFluxes}},
  \code{\link{CalcNoahmpWatBudg}},
  \code{\link{CalcStatCont}}
}
\concept{
modelEval
}
\keyword{ts}
\keyword{univar}

