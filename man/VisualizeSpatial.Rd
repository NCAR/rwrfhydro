% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualize_spatial.R
\name{VisualizeSpatial}
\alias{VisualizeSpatial}
\title{Visualize WRF Hydro domain spatial data.}
\usage{
VisualizeSpatial(input, varName = "Variable", plot = TRUE, plotDf = NULL)
}
\arguments{
\item{input}{A 2D array of data matching domain file.}

\item{varName}{Character string specifying name of variable being plotted. Optional.}

\item{plot}{Logical: plot or not?}

\item{plotDf}{An optional data frame with the data from file already reprojected.}
}
\value{
A function which can be called to plot the data and allow adjustment of its arguments, the plotting parameters.
}
\description{
\code{VisualizeSpatial} creates basic plots of spatial data covering WRF-Hydro domain.
}
\details{
Crude plots of the WRF Hydro spatial data. The routine accepts a grid of spatial data for either the geo 
(coarse resolution) or hydro (fine resolution) files. The return is a function 
(a closure which encapuslates the domain data) which 
creates a plot when called. The arguments to the function can be changed to tailor the plot 
(arguments are passed to ggmap and ggplot inside the function). This function (the closure) returns
a ggplot object whose data can be accessed.
}
\examples{
\dontrun{
geoFile <- '/home/karsten/geo_em.d02.nc'
coordsProj <- GetDomainCoordsProj(geoFile)
ClosureGeo <- VisualizeSpatial(data[,,],varName='Temperature',plot=FALSE,plotDf=coordsProj)
closureMap <- 
  ClosureGeo(zoom=11,pointsize=9,
             gradNColors=rainbow(25),alpha=.6,maptype='terrain',
             subsetRange=range(plotDf$value),
             xlim=range(plotDf$long)+mapMargin*1.5,
             ylim=range(plotDf$lat)+mapMargin)
}
}
\seealso{
Other domain: \code{\link{GetDomainCoordsProj}},
  \code{\link{VisualizeChanNtwk}},
  \code{\link{VisualizeDomain}}
}
\concept{
plot
}
\keyword{hplot}

